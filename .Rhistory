dfo[[questionnaire]][[item]]$Question<-gsq(dfo[[questionnaire]][[item]]$Question)
mydata$instr_descr_items[[questionnaire]][[item]]<-gsq(mydata$instr_descr_items[[questionnaire]][[item]])
names(mydata$instr_descr_options[[questionnaire]][[item]])<-gsq(names(mydata$instr_descr_options[[questionnaire]][[item]]))
}
}
for(questionnaire in 1:length(dfoc)) {
names(dfoc[[questionnaire]])<-gsq(names(dfoc[[questionnaire]]))
for(item in 1:length(dfoc[[questionnaire]])) {
dfoc[[questionnaire]][[item]]$Text<-gsq(dfoc[[questionnaire]][[item]]$Text)
dfoc[[questionnaire]][[item]]$Question<-gsq(dfoc[[questionnaire]][[item]]$Question)
}
}
check(df_all)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
environment_options()
load(file="/opt/repo/rworking/projects/perception/data/df_all.rda")
##########################################################################################
# REMOVE TESTS
##########################################################################################
df_all<-df_all[df_all$subj_id %in% participants$subj_id,]
# check(df_all,nuniques=50,file="/opt/repo/rworking/projects/perception/output/2019/df_all_check")
##########################################################################################
# DESCRIPTIVES
##########################################################################################
factorlist<-which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)]))
corlist<-grep("score",names(df_all))
df_all_min<-drop_levels(df_all,minimum_frequency=30)
frequencies<-compute_frequencies(df_all[,factorlist],file="/opt/repo/rworking/projects/perception/output/2019/descriptives/frequencies_categorical",ordered=TRUE)
check(df_all)
check(df_all)
?check
check(df_all,length=10)
check(df_all,length=10)
?check
check(df_all,name_length=10)
check(df_all,name_length=10)
check(df_all,name_length=50)
check(df_all,name_length=90)
response_frequencies<-plot_response_frequencies(df_all,factorlist=which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)])),base_size=20)
response_frequencies<-plot_response_frequencies(df_all,factorlist=factorlist,base_size=20)
# histograms<-plot_histogram(df_all[,grep("score",names(df_all))],base_size=15)
report_pdf(plotlist=response_frequencies,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/response_frequencies",w=30,h=10)
# histograms<-plot_histogram(df_all[,grep("score",names(df_all))],base_size=15)
check(df_all)
# histograms<-plot_histogram(df_all[,grep("score",names(df_all))],base_size=15)
check(df_all)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
mydata<-rjson::fromJSON(file="/opt/repo/rworking/projects/perception/data/appsrv_perception_pro.json")
mydata_attributes<-rjson::fromJSON(file="/opt/repo/rworking/projects/perception/data/perception_attrs.json")
raw_scores<-json2dataframe(mydata$rscores,row_to_collumn=TRUE)
personal<-json2dataframe(mydata$personal,row_to_collumn=TRUE)
personal$subj_id<-as.numeric(personal$subj_id)
participants<-read.csv("/opt/repo/rworking/projects/perception/data/subjects.csv",stringsAsFactors=FALSE)
personal<-personal[personal$subj_id %in% participants$subj_id,]
source("/opt/repo/rworking/projects/perception/code/2019/functions.R")
##########################################################################################
# SCORES
##########################################################################################
sa<-data.frame(names=raw_scores$names,score_A=rowSums(raw_scores[,grep("_A",names(raw_scores),value=TRUE)],na.rm=TRUE),stringsAsFactors=FALSE)
sb<-data.frame(names=raw_scores$names,score_B=rowSums(raw_scores[,grep("_B",names(raw_scores),value=TRUE)],na.rm=TRUE),stringsAsFactors=FALSE)
sl<-data.frame(names=raw_scores$names,score_L=rowSums(raw_scores[,grep("_L",names(raw_scores),value=TRUE)],na.rm=TRUE),stringsAsFactors=FALSE)
sm<-data.frame(names=raw_scores$names,score_M=rowSums(raw_scores[,grep("_M",names(raw_scores),value=TRUE)],na.rm=TRUE),stringsAsFactors=FALSE)
so<-data.frame(names=raw_scores$names,score_O=rowSums(raw_scores[,grep("_O",names(raw_scores),value=TRUE)],na.rm=TRUE),stringsAsFactors=FALSE)
sr<-data.frame(names=raw_scores$names,score_R=rowSums(raw_scores[,grep("_R",names(raw_scores),value=TRUE)],na.rm=TRUE),stringsAsFactors=FALSE)
scores<-Reduce(function(x,y) merge(x,y,all=TRUE), list(sa,sb,sl,sm,so,sr))
##########################################################################################
#
##########################################################################################
dfl<-dfo<-dfoc<-list()
for(i in names(mydata$itemresponses))
dfl[[i]]<-json2dataframe(mydata$itemresponses[[i]],row_to_collumn=TRUE)
for(i in names(mydata$instr_descr_options))
dfo[[i]]<-get_coding(mydata$instr_descr_options[[i]])
for(i in intersect(names(mydata$instr_descr_options),names(mydata_attributes)))
dfoc[[i]]<-get_coding(mydata_attributes[[i]])
for(questionnaire in 1:length(mydata$instr_descr_items)) {
names(mydata$instr_descr_options[[questionnaire]])<-gsq(names(mydata$instr_descr_options[[questionnaire]]))
names(dfo[[questionnaire]])<-gsq(names(dfo[[questionnaire]]))
for(item in 1:length(mydata$instr_descr_items[[questionnaire]])) {
dfo[[questionnaire]][[item]]$Text<-gsq(dfo[[questionnaire]][[item]]$Text)
dfo[[questionnaire]][[item]]$Question<-gsq(dfo[[questionnaire]][[item]]$Question)
mydata$instr_descr_items[[questionnaire]][[item]]<-gsq(mydata$instr_descr_items[[questionnaire]][[item]])
names(mydata$instr_descr_options[[questionnaire]][[item]])<-gsq(names(mydata$instr_descr_options[[questionnaire]][[item]]))
}
}
for(questionnaire in 1:length(dfoc)) {
names(dfoc[[questionnaire]])<-gsq(names(dfoc[[questionnaire]]))
for(item in 1:length(dfoc[[questionnaire]])) {
dfoc[[questionnaire]][[item]]$Text<-gsq(dfoc[[questionnaire]][[item]]$Text)
dfoc[[questionnaire]][[item]]$Question<-gsq(dfoc[[questionnaire]][[item]]$Question)
}
}
# write_txt(dfoc,file="/opt/repo/rworking/projects/perception/output/2019/dfoc")
# write_txt(dfo,file="/opt/repo/rworking/projects/perception/output/2019/dfo")
##########################################################################################
# BIODATA
##########################################################################################
df_names<-c("biodata","biodata_2017","saf_biodata","biodata_msl","biodata_wbs")
for(i in df_names){
names(dfl[[i]])<-c("names",json2dataframe(mydata$instr_descr_items[[i]])[,1])
dfl[[paste0(i,"_recode")]]<-recode_dataframe(dfl[[i]],dfo[[i]])
}
biodata<-plyr::rbind.fill(dfl$biodata_recode,dfl$biodata_2017_recode,dfl$biodata_saf_recode,dfl$biodata_msl_recode,dfl$biodata_wbs_recode)
check(biodata)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
environment_options()
load(file="/opt/repo/rworking/projects/perception/data/df_all.rda")
##########################################################################################
# REMOVE TESTS
##########################################################################################
df_all<-df_all[df_all$subj_id %in% participants$subj_id,]
# check(df_all,nuniques=50,file="/opt/repo/rworking/projects/perception/output/2019/df_all_check")
##########################################################################################
# DESCRIPTIVES
##########################################################################################
factorlist<-which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)]))
corlist<-grep("score",names(df_all))
df_all_min<-drop_levels(df_all,minimum_frequency=30)
frequencies<-compute_frequencies(df_all[,factorlist],file="/opt/repo/rworking/projects/perception/output/2019/descriptives/frequencies_categorical",ordered=TRUE)
descriptives<-compute_descriptives(df=df_all,corlist=corlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_scores")
descriptives_by_factor<-compute_descriptives(df=df_all,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_by_factor")
crosstables<-plot_crosstable(df_all_min,factorlist=factorlist,angle=45,base_size=15)
response_frequencies<-plot_response_frequencies(df_all,factorlist=factorlist,base_size=20)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
environment_options()
load(file="/opt/repo/rworking/projects/perception/data/df_all.rda")
##########################################################################################
# REMOVE TESTS
##########################################################################################
df_all<-df_all[df_all$subj_id %in% participants$subj_id,]
# check(df_all,nuniques=50,file="/opt/repo/rworking/projects/perception/output/2019/df_all_check")
##########################################################################################
# DESCRIPTIVES
##########################################################################################
factorlist<-which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)]))
corlist<-grep("score",names(df_all))
df_all_min<-drop_levels(df_all,minimum_frequency=30)
frequencies<-compute_frequencies(df_all[,factorlist],file="/opt/repo/rworking/projects/perception/output/2019/descriptives/frequencies_categorical",ordered=TRUE)
descriptives<-compute_descriptives(df=df_all,corlist=corlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_scores")
descriptives_by_factor<-compute_descriptives(df=df_all,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_by_factor")
crosstables<-plot_crosstable(df_all_min,factorlist=factorlist,angle=45,base_size=15)
response_frequencies<-plot_response_frequencies(df_all,factorlist=factorlist,base_size=20)
which(names(df_all)=="Nationality")
response_frequencies_nationality<-plot_response_frequencies(df_all,factorlist=which(names(df_all)=="Nationality"),base_size=20)
response_frequencies_nationality
plot_response_frequencies(df_all,factorlist=which(names(df_all)=="Nationality"),base_size=20)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
environment_options()
load(file="/opt/repo/rworking/projects/perception/data/df_all.rda")
##########################################################################################
# REMOVE TESTS
##########################################################################################
df_all<-df_all[df_all$subj_id %in% participants$subj_id,]
# check(df_all,nuniques=50,file="/opt/repo/rworking/projects/perception/output/2019/df_all_check")
##########################################################################################
# DESCRIPTIVES
##########################################################################################
factorlist<-which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)]))
corlist<-grep("score",names(df_all))
df_all_min<-drop_levels(df_all,minimum_frequency=30)
frequencies<-compute_frequencies(df_all[,factorlist],file="/opt/repo/rworking/projects/perception/output/2019/descriptives/frequencies_categorical",ordered=TRUE)
descriptives<-compute_descriptives(df=df_all,corlist=corlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_scores")
descriptives_by_factor<-compute_descriptives(df=df_all,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_by_factor")
response_frequencies<-plot_response_frequencies(df_all,factorlist=factorlist,base_size=20)
response_frequencies_nationality<-plot_response_frequencies(df_all,factorlist=which(names(df_all)=="Nationality"),base_size=20)
response_frequencies_nationality
response_frequencies
response_frequencies_nationality<-plot_response_frequencies(df_all,factorlist=c(which(names(df_all)=="Nationality"),10),base_size=20)
response_frequencies_nationality
response_frequencies_nationality<-plot_response_frequencies(df_all_min,factorlist=c(which(names(df_all)=="Nationality"),10),base_size=20)
response_frequencies_nationality
df_all_min<-drop_levels(df_all,minimum_frequency=10)
response_frequencies_nationality<-plot_response_frequencies(df_all_min,factorlist=c(which(names(df_all)=="Nationality"),10),base_size=20)
response_frequencies_nationality
response_frequencies_nationality<-plot_response_frequencies(df_all_min,factorlist=c(15,which(names(df_all)=="Nationality")),base_size=20)
response_frequencies_nationality
df_all_min<-drop_levels(df_all,minimum_frequency=10)
response_frequencies_nationality<-plot_response_frequencies(df_all_min,factorlist=c(15,which(names(df_all)=="Nationality")),base_size=20)
df_all_min<-drop_levels(df_all,minimum_frequency=1)
response_frequencies_nationality<-plot_response_frequencies(df_all_min,factorlist=c(15,which(names(df_all)=="Nationality")),base_size=20)
response_frequencies_nationality
# histograms<-plot_histogram(df_all[,grep("score",names(df_all))],base_size=15)
check(df_all)
# histograms<-plot_histogram(df_all[,grep("score",names(df_all))],base_size=15)
check(df_all)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
environment_options()
load(file="/opt/repo/rworking/projects/perception/data/df_all.rda")
##########################################################################################
# REMOVE TESTS
##########################################################################################
df_all<-df_all[df_all$subj_id %in% participants$subj_id,]
# check(df_all,nuniques=50,file="/opt/repo/rworking/projects/perception/output/2019/df_all_check")
##########################################################################################
# DESCRIPTIVES
##########################################################################################
factorlist<-which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)]))
corlist<-grep("score",names(df_all))
df_all_min<-drop_levels(df_all,minimum_frequency=30)
frequencies<-compute_frequencies(df_all[,factorlist],file="/opt/repo/rworking/projects/perception/output/2019/descriptives/frequencies_categorical",ordered=TRUE)
descriptives<-compute_descriptives(df=df_all,corlist=corlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_scores")
descriptives_by_factor<-compute_descriptives(df=df_all,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_by_factor")
response_frequencies<-plot_response_frequencies(df_all,factorlist=factorlist,base_size=20)
response_frequencies_nationality<-plot_response_frequencies(df_all,factorlist=which(names(df_all)=="Nationality"),base_size=20)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
environment_options()
load(file="/opt/repo/rworking/projects/perception/data/df_all.rda")
##########################################################################################
# REMOVE TESTS
##########################################################################################
df_all<-df_all[df_all$subj_id %in% participants$subj_id,]
# check(df_all,nuniques=50,file="/opt/repo/rworking/projects/perception/output/2019/df_all_check")
##########################################################################################
# DESCRIPTIVES
##########################################################################################
factorlist<-which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)]))
corlist<-grep("score",names(df_all))
df_all_min<-drop_levels(df_all,minimum_frequency=30)
frequencies<-compute_frequencies(df_all[,factorlist],file="/opt/repo/rworking/projects/perception/output/2019/descriptives/frequencies_categorical",ordered=TRUE)
descriptives<-compute_descriptives(df=df_all,corlist=corlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_scores")
descriptives_by_factor<-compute_descriptives(df=df_all,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_by_factor")
response_frequencies<-plot_response_frequencies(df_all,factorlist=factorlist,base_size=20)
response_frequencies_nationality<-plot_response_frequencies(df_all,factorlist=which(names(df_all)=="Nationality"),base_size=20)
# histograms<-plot_histogram(df_all[,grep("score",names(df_all))],base_size=15)
# report_pdf(plotlist=response_frequencies,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/response_frequencies",w=30,h=10)
# report_pdf(plotlist=histograms,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/histograms_scores",w=10,h=10)
##########################################################################################
# ANOVA
##########################################################################################
names(df_all_min)<-make.names(names(df_all_min))
corlist<-grep("score",names(df_all_min))
demographics<-c("Age","Gender","Siblings","How many sisters?","How many brothers?","Are you a twin?","Where do you come in the sibling order?","As a child were you friends with your brothers and sisters?","As an adult are you friends with your brothers and sisters?","Did you get on with your step brother(s) sister(s) as a child?","Do you know how you became part of a family?","If your parents divorced or separated what age were you when it happened?","Nationality")
factorlist<-which(names(df_all)%in%c(demographics,factornames))
result_oneway<-report_oneway(df=df_all_min,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/anova/oneway",plot_diagnostics=FALSE,plot_means=FALSE,w=10,h=5)
significant_iv<-result_oneway$welch[result_oneway$welch$Significant %in% TRUE,c("DV","IV")]
significant_iv<-change_data_type(significant_iv,type="character")
factorlist_A<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_A",]$IV))
factorlist_B<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_B",]$IV))
factorlist_L<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_L",]$IV))
factorlist_M<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_M",]$IV))
factorlist_O<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
factorlist_R<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
pA<-plot_oneway(df=df_all_min,corlist=grep("score_A",names(df_all_min)),factorlist=factorlist_A)
pB<-plot_oneway(df=df_all_min,corlist=grep("score_B",names(df_all_min)),factorlist=factorlist_B)
pL<-plot_oneway(df=df_all_min,corlist=grep("score_L",names(df_all_min)),factorlist=factorlist_L)
pM<-plot_oneway(df=df_all_min,corlist=grep("score_M",names(df_all_min)),factorlist=factorlist_M)
pO<-plot_oneway(df=df_all_min,corlist=grep("score_O",names(df_all_min)),factorlist=factorlist_O)
pR<-plot_oneway(df=df_all_min,corlist=grep("score_R",names(df_all_min)),factorlist=factorlist_R)
pdA<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_A",names(df_all_min)),factorlist=factorlist_A,base_size=10)
##########################################################################################
# LOAD
##########################################################################################
library(psycholatefunctions)
rm(list=ls(all=TRUE))
cat("\014")
graphics.off()
environment_options()
load(file="/opt/repo/rworking/projects/perception/data/df_all.rda")
##########################################################################################
# REMOVE TESTS
##########################################################################################
df_all<-df_all[df_all$subj_id %in% participants$subj_id,]
# check(df_all,nuniques=50,file="/opt/repo/rworking/projects/perception/output/2019/df_all_check")
##########################################################################################
# DESCRIPTIVES
##########################################################################################
factorlist<-which(names(df_all)%in%names(df_all[,sapply(df_all,is.factor)]))
corlist<-grep("score",names(df_all))
df_all_min<-drop_levels(df_all,minimum_frequency=30)
# frequencies<-compute_frequencies(df_all[,factorlist],file="/opt/repo/rworking/projects/perception/output/2019/descriptives/frequencies_categorical",ordered=TRUE)
# descriptives<-compute_descriptives(df=df_all,corlist=corlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_scores")
# descriptives_by_factor<-compute_descriptives(df=df_all,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/descriptives_by_factor")
# response_frequencies<-plot_response_frequencies(df_all,factorlist=factorlist,base_size=20)
# response_frequencies_nationality<-plot_response_frequencies(df_all,factorlist=which(names(df_all)=="Nationality"),base_size=20)
# histograms<-plot_histogram(df_all[,grep("score",names(df_all))],base_size=15)
# report_pdf(plotlist=response_frequencies,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/response_frequencies",w=30,h=10)
# report_pdf(plotlist=histograms,file="/opt/repo/rworking/projects/perception/output/2019/descriptives/histograms_scores",w=10,h=10)
##########################################################################################
# ANOVA
##########################################################################################
names(df_all_min)<-make.names(names(df_all_min))
corlist<-grep("score",names(df_all_min))
demographics<-c("Age","Gender","Siblings","How many sisters?","How many brothers?","Are you a twin?","Where do you come in the sibling order?","As a child were you friends with your brothers and sisters?","As an adult are you friends with your brothers and sisters?","Did you get on with your step brother(s) sister(s) as a child?","Do you know how you became part of a family?","If your parents divorced or separated what age were you when it happened?","Nationality")
factorlist<-which(names(df_all)%in%c(demographics,factornames))
result_oneway<-report_oneway(df=df_all_min,corlist=corlist,factorlist=factorlist,file="/opt/repo/rworking/projects/perception/output/2019/anova/oneway",plot_diagnostics=FALSE,plot_means=FALSE,w=10,h=5)
significant_iv<-result_oneway$welch[result_oneway$welch$Significant %in% TRUE,c("DV","IV")]
significant_iv<-change_data_type(significant_iv,type="character")
factorlist_A<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_A",]$IV))
factorlist_B<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_B",]$IV))
factorlist_L<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_L",]$IV))
factorlist_M<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_M",]$IV))
factorlist_O<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
factorlist_R<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
pA<-plot_oneway(df=df_all_min,corlist=grep("score_A",names(df_all_min)),factorlist=factorlist_A)
pB<-plot_oneway(df=df_all_min,corlist=grep("score_B",names(df_all_min)),factorlist=factorlist_B)
pL<-plot_oneway(df=df_all_min,corlist=grep("score_L",names(df_all_min)),factorlist=factorlist_L)
pM<-plot_oneway(df=df_all_min,corlist=grep("score_M",names(df_all_min)),factorlist=factorlist_M)
pO<-plot_oneway(df=df_all_min,corlist=grep("score_O",names(df_all_min)),factorlist=factorlist_O)
pR<-plot_oneway(df=df_all_min,corlist=grep("score_R",names(df_all_min)),factorlist=factorlist_R)
pdA<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_A",names(df_all_min)),factorlist=factorlist_A,base_size=10)
pdB<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_B",names(df_all_min)),factorlist=factorlist_B,base_size=10)
pdL<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_L",names(df_all_min)),factorlist=factorlist_L,base_size=10)
pdM<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_M",names(df_all_min)),factorlist=factorlist_M,base_size=10)
pdO<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_O",names(df_all_min)),factorlist=factorlist_O,base_size=10)
pdR<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_R",names(df_all_min)),factorlist=factorlist_R,base_size=10)
report_pdf(plotlist=c(pA$plots,pB$plots,pL$plots,pM$plots,pO$plots,pR$plots),w=15,h=10,file="/opt/repo/rworking/projects/perception/output/2019/anova/oneway_means")
report_pdf(plotlist=c(pdA,pdB,pdL,pdM,pdO,pdR),w=10,h=10,file="/opt/repo/rworking/projects/perception/output/2019/anova/oneway_diagnostics")
factorlist_A<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_A",]$IV))
factorlist_B<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_B",]$IV))
factorlist_L<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_L",]$IV))
factorlist_M<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_M",]$IV))
factorlist_O<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
factorlist_R<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
pA<-plot_oneway(df=df_all_min,corlist=grep("score_A",names(df_all_min)),factorlist=factorlist_A)
significant_iv<-result_oneway$welch[result_oneway$welch$Significant %in% TRUE,c("DV","IV")]
significant_iv<-change_data_type(significant_iv,type="character")
factorlist_A<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_A",]$IV))
factorlist_B<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_B",]$IV))
factorlist_L<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_L",]$IV))
factorlist_M<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_M",]$IV))
factorlist_O<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
factorlist_R<-which(tolower(make.names(names(df_all)))%in%tolower(significant_iv[significant_iv$DV%in%"score_O",]$IV))
pA<-plot_oneway(df=df_all_min,corlist=grep("score_A",names(df_all_min)),factorlist=factorlist_A)
pB<-plot_oneway(df=df_all_min,corlist=grep("score_B",names(df_all_min)),factorlist=factorlist_B)
pL<-plot_oneway(df=df_all_min,corlist=grep("score_L",names(df_all_min)),factorlist=factorlist_L)
pM<-plot_oneway(df=df_all_min,corlist=grep("score_M",names(df_all_min)),factorlist=factorlist_M)
pO<-plot_oneway(df=df_all_min,corlist=grep("score_O",names(df_all_min)),factorlist=factorlist_O)
pR<-plot_oneway(df=df_all_min,corlist=grep("score_R",names(df_all_min)),factorlist=factorlist_R)
pdA<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_A",names(df_all_min)),factorlist=factorlist_A,base_size=10)
pdB<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_B",names(df_all_min)),factorlist=factorlist_B,base_size=10)
pdL<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_L",names(df_all_min)),factorlist=factorlist_L,base_size=10)
pdM<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_M",names(df_all_min)),factorlist=factorlist_M,base_size=10)
pdO<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_O",names(df_all_min)),factorlist=factorlist_O,base_size=10)
pdR<-plot_oneway_diagnostics(df=df_all_min,corlist=grep("score_R",names(df_all_min)),factorlist=factorlist_R,base_size=10)
report_pdf(plotlist=c(pA$plots,pB$plots,pL$plots,pM$plots,pO$plots,pR$plots),w=15,h=10,file="/opt/repo/rworking/projects/perception/output/2019/anova/oneway_means")
significant_iv
nrow(significant_iv)
#############################################################################################################################################################################################################
# LOAD
#############################################################################################################################################################################################################
library(psycholatefunctions)
rm(list=ls())
graphics.off()
load(file="rworking/projects/moraldna/data/2018/mDF_ALL.rda")
rules_vars<-c("compliant","deferential","dutiful","humble","obedient","obliging")
values_vars<-c("ethical","honest","honourable","moral","principled","responsible")
people_vars<-c("sympathetic","caring","compassionate","considerate","generous","kind")
pers_rules_vars<-c("Pers_compliant","Pers_deferential","Pers_dutiful","Pers_humble","Pers_obedient","Pers_obliging")
pers_values_vars<-c("Pers_ethical","Pers_honest","Pers_honourable","Pers_moral","Pers_principled","Pers_responsible")
pers_people_vars<-c("Pers_sympathetic","Pers_caring","Pers_compassionate","Pers_considerate","Pers_generous","Pers_kind")
work_values_vars<-c("Wrk_ethical","Wrk_honest","Wrk_honourable","Wrk_moral","Wrk_principled","Wrk_responsible")
work_rules_vars<-c("Wrk_compliant","Wrk_deferential","Wrk_dutiful","Wrk_humble","Wrk_obedient","Wrk_obliging")
work_people_vars<-c("Wrk_sympathetic","Wrk_caring","Wrk_compassionate","Wrk_considerate","Wrk_generous","Wrk_kind")
Excellence<-paste0("Ips_",c("i_always_try_to_do_great_work","i_always_aim_to_do_a_first_class_job","people_can_rely_on_the_quality_of_my_work","i_think_that_a_job_worth_doing_is_worth_doing_well","i_m_a_perfectionist"))
Courage<-paste0("Ips_",c("if_i_believe_something_is_wrong_i_will_try_to_make_it_right","i_won_t_take_the_easy_option_if_it_s_the_wrong_thing_to_do","i_don_t_give_up_on_a_just_cause","i_never_run_away_from_doing_what_s_right","i_always_stand_up_for_what_s_right"))
Hope<-paste0("Ips_",c("i_am_optimistic_about_the_future","i_think_its_good_to_be_positive_about_life","i_believe_that_whatever_happens_to_us_there_is_always_hope","i_m_positive_about_the_future_even_if_things_look_bad_today","i_believe_we_must_never_lose_hope"))
Wisdom<-paste0("Ips_",c("i_try_to_think_before_acting","i_consider_the_alternatives_before_acting","i_avoid_acting_hastily","whenever_i_come_to_conclusions_they_are_well_thought_out","i_think_it_s_good_to_stop_and_think_things_through"))
Selfcontrol<-paste0("Ips_",c("i_m_good_at_exercising_self_control","i_almost_always_control_my_impulses","i_try_to_exercise_restraint_in_my_life","i_m_not_an_impulsive_person","i_rarely_buy_things_on_impulse"))
Trust<-paste0("Ips_",c("i_always_honour_people_s_trust_in_me","i_never_let_people_down","people_have_absolute_faith_in_me","i_am_totally_trustworthy","i_never_break_promises"))
Honesty<-paste0("Ips_",c("i_try_very_hard_to_be_truthful","although_truth_hurts_i_m_always_honest","i_never_hide_the_truth","i_never_tell_half_truths","i_believe_that_honesty_is_always_the_best_policy"))
Humility<-paste0("Ips_",c("i_feel_embarrassed_when_others_praise_me","i_don_t_like_being_in_the_limelight_even_if_things_go_well","i_feel_embarassed_when_people_praise_me","i_hate_being_the_centre_of_attention","i_m_quite_a_modest_person"))
Fairness<-paste0("Ips_",c("i_am_always_fair_to_others","i_treat_others_fairly","i_m_a_very_fair_person","i_always_look_at_both_sides_of_an_argument","i_m_good_at_settling_arguments_fairly"))
Care<-paste0("Ips_",c("people_say_i_m_a_caring_person","people_say_i_m_considerate","i_think_that_we_should_all_be_more_compassionate","i_m_a_very_compassionate_person","i_m_a_very_caring_person"))
demographics<-c("Gender","Age","Children","Nationality","Native_language","Ethnicity","Education","Occupation","Leadership_status","Company_size","Politics","Religion")
responses<-c(pers_rules_vars,pers_values_vars,pers_people_vars,
work_rules_vars,work_values_vars,work_people_vars,
Excellence,Courage,Hope,Wisdom,Selfcontrol,Trust,Honesty,Humility,Fairness,Care)
scores_personal<-c("Pers_gen","Pers_compliance","Pers_humanity","Pers_integrity")
scores_work<-c("Work_gen","Work_compliance","Work_humanity","Work_integrity")
scores_values<-c("Excellence","Courage","Hope","Wisdom","Self_control","Trust","Honesty","Humility","Fairness","Love")
errors<-c("Pers_gen_e","Pers_compliance_e","Pers_humanity_e","Pers_integrity_e","Work_gen_e","Work_compliance_e","Work_humanity_e","Work_integrity_e",
"Excellence_err","Courage_err","Hope_err","Wisdom_err","Self_control_err","Trust_err","Honesty_err","Humility_err","Fairness_err","Love_err")
scores<-c(scores_personal,scores_work,scores_values)
#############################################################################################################################################################################################################
# LOAD
#############################################################################################################################################################################################################
library(psycholatefunctions)
rm(list=ls())
graphics.off()
load(file="rworking/projects/moraldna/data/2018/mDF_ALL.rda")
rules_vars<-c("compliant","deferential","dutiful","humble","obedient","obliging")
values_vars<-c("ethical","honest","honourable","moral","principled","responsible")
people_vars<-c("sympathetic","caring","compassionate","considerate","generous","kind")
pers_rules_vars<-c("Pers_compliant","Pers_deferential","Pers_dutiful","Pers_humble","Pers_obedient","Pers_obliging")
pers_values_vars<-c("Pers_ethical","Pers_honest","Pers_honourable","Pers_moral","Pers_principled","Pers_responsible")
pers_people_vars<-c("Pers_sympathetic","Pers_caring","Pers_compassionate","Pers_considerate","Pers_generous","Pers_kind")
work_values_vars<-c("Wrk_ethical","Wrk_honest","Wrk_honourable","Wrk_moral","Wrk_principled","Wrk_responsible")
work_rules_vars<-c("Wrk_compliant","Wrk_deferential","Wrk_dutiful","Wrk_humble","Wrk_obedient","Wrk_obliging")
work_people_vars<-c("Wrk_sympathetic","Wrk_caring","Wrk_compassionate","Wrk_considerate","Wrk_generous","Wrk_kind")
Excellence<-paste0("Ips_",c("i_always_try_to_do_great_work","i_always_aim_to_do_a_first_class_job","people_can_rely_on_the_quality_of_my_work","i_think_that_a_job_worth_doing_is_worth_doing_well","i_m_a_perfectionist"))
Courage<-paste0("Ips_",c("if_i_believe_something_is_wrong_i_will_try_to_make_it_right","i_won_t_take_the_easy_option_if_it_s_the_wrong_thing_to_do","i_don_t_give_up_on_a_just_cause","i_never_run_away_from_doing_what_s_right","i_always_stand_up_for_what_s_right"))
Hope<-paste0("Ips_",c("i_am_optimistic_about_the_future","i_think_its_good_to_be_positive_about_life","i_believe_that_whatever_happens_to_us_there_is_always_hope","i_m_positive_about_the_future_even_if_things_look_bad_today","i_believe_we_must_never_lose_hope"))
Wisdom<-paste0("Ips_",c("i_try_to_think_before_acting","i_consider_the_alternatives_before_acting","i_avoid_acting_hastily","whenever_i_come_to_conclusions_they_are_well_thought_out","i_think_it_s_good_to_stop_and_think_things_through"))
Selfcontrol<-paste0("Ips_",c("i_m_good_at_exercising_self_control","i_almost_always_control_my_impulses","i_try_to_exercise_restraint_in_my_life","i_m_not_an_impulsive_person","i_rarely_buy_things_on_impulse"))
Trust<-paste0("Ips_",c("i_always_honour_people_s_trust_in_me","i_never_let_people_down","people_have_absolute_faith_in_me","i_am_totally_trustworthy","i_never_break_promises"))
Honesty<-paste0("Ips_",c("i_try_very_hard_to_be_truthful","although_truth_hurts_i_m_always_honest","i_never_hide_the_truth","i_never_tell_half_truths","i_believe_that_honesty_is_always_the_best_policy"))
Humility<-paste0("Ips_",c("i_feel_embarrassed_when_others_praise_me","i_don_t_like_being_in_the_limelight_even_if_things_go_well","i_feel_embarassed_when_people_praise_me","i_hate_being_the_centre_of_attention","i_m_quite_a_modest_person"))
Fairness<-paste0("Ips_",c("i_am_always_fair_to_others","i_treat_others_fairly","i_m_a_very_fair_person","i_always_look_at_both_sides_of_an_argument","i_m_good_at_settling_arguments_fairly"))
Care<-paste0("Ips_",c("people_say_i_m_a_caring_person","people_say_i_m_considerate","i_think_that_we_should_all_be_more_compassionate","i_m_a_very_compassionate_person","i_m_a_very_caring_person"))
demographics<-c("Gender","Age","Children","Nationality","Native_language","Ethnicity","Education","Occupation","Leadership_status","Company_size","Politics","Religion")
responses<-c(pers_rules_vars,pers_values_vars,pers_people_vars,
work_rules_vars,work_values_vars,work_people_vars,
Excellence,Courage,Hope,Wisdom,Selfcontrol,Trust,Honesty,Humility,Fairness,Care)
scores_personal<-c("Pers_gen","Pers_compliance","Pers_humanity","Pers_integrity")
scores_work<-c("Work_gen","Work_compliance","Work_humanity","Work_integrity")
scores_values<-c("Excellence","Courage","Hope","Wisdom","Self_control","Trust","Honesty","Humility","Fairness","Love")
errors<-c("Pers_gen_e","Pers_compliance_e","Pers_humanity_e","Pers_integrity_e","Work_gen_e","Work_compliance_e","Work_humanity_e","Work_integrity_e",
"Excellence_err","Courage_err","Hope_err","Wisdom_err","Self_control_err","Trust_err","Honesty_err","Humility_err","Fairness_err","Love_err")
scores<-c(scores_personal,scores_work,scores_values)
#############################################################################################################################################################################################################
# DESCRIPTIVES REQUESTED
#############################################################################################################################################################################################################
check(mDF_ALL)
#############################################################################################################################################################################################################
# DESCRIPTIVES REQUESTED
#############################################################################################################################################################################################################
check(mDF_ALL)
table(mDF_ALL$Occupation)
table(mDF_ALL$Occupation)
nrow(mDF_ALL)
table(mDF_ALL$Occupation)
#############################################################################################################################################################################################################
# LOAD
#############################################################################################################################################################################################################
library(psycholatefunctions)
rm(list=ls())
graphics.off()
load(file="rworking/projects/moraldna/data/2018/mDF_ALL.rda")
#############################################################################################################################################################################################################
# DESCRIPTIVES REQUESTED
#############################################################################################################################################################################################################
check(mDF_ALL)
#############################################################################################################################################################################################################
# DESCRIPTIVES REQUESTED
#############################################################################################################################################################################################################
check(mDF_ALL,name_length=60)
table(mDF_ALL$Occupation)
sum(table(mDF_ALL$Occupation))
table(mDF_ALL$Occupation)
mdf_legal<-mDF_ALL[mDF_ALL$Occupation%in%"Legal",]
table(mdf_legal$Occupation)
nrow(mDF_ALL)
mdf_legal_scores<-mdf_legal[,c("scores_personal","scores_work","scores_values")]
mdf_legal_scores<-mdf_legal[,c(scores_personal,scores_work,scores_values)]
scores_personal<-c("Pers_gen","Pers_compliance","Pers_humanity","Pers_integrity")
scores_work<-c("Work_gen","Work_compliance","Work_humanity","Work_integrity")
scores_values<-c("Excellence","Courage","Hope","Wisdom","Self_control","Trust","Honesty","Humility","Fairness","Love")
mdf_legal_scores<-mdf_legal[,c(scores_personal,scores_work,scores_values)]
check(mdf_legal_scores)
mdf_legal_scores<-mdf_legal_scores[complete.cases(mdf_legal_scores),]
check(mdf_legal_scores)
compute_descriptives(mdf_legal_scores,file="descriptives_legal")
shiny::runApp('rworking/projects/moraldna/code/2018/shiny')
irt_models<-function() {
print(getwd())
original_directory<-getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
shiny::runApp()
setwd(original_directory)
print(getwd())
}
irt_models()
print(getwd())
irt_models<-function() {
shiny::runApp(dirname(rstudioapi::getActiveDocumentContext()$path))
}
irt_models()
install.packages("irtDEMO")
install.packages("irtDemo")
getwd()
